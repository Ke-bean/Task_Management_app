/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;
import java.util.*;
import DAO.PersonHandlerdao;
import DAO.SessionId;
import DAO.TaskDao;
import MODEL.Person;
import MODEL.Task;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author Kebean
 */
public class UserDashboard extends javax.swing.JFrame {

    /**
     * Creates new form UserDashboard
     */
    public UserDashboard() {
        initComponents();
        addColumn();
        displayTask();
    }
        String task;
        int taskid;
        String category;
        String date;
        String feedBack;
        Task taskObj = new Task();
        TaskDao daoObj = new TaskDao();
        // Was Trying to implement a cutom function to easy my life :))!
        
//        public void displayAllTasks(){
//            List<Task> allTasks = daoObj.RetrieveAllTasks();
//            if(allTasks != null){
//                try{
//                   for (Task singleTask: allTasks){
//                   taskid = singleTask.getId();
//                   task = singleTask.getTask();
//                   category = singleTask.getCategory();
//                   SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
//                   String dateString = dateFormat.format(singleTask.getDate());
//                   String[] tasks = {Integer.toString(taskid),task, category, dateString};
//                   DefaultTableModel model = (DefaultTableModel)taskTable.getModel();
//                   model.addRow(tasks);
//                }
//                }catch(Exception ex){
//                    ex.printStackTrace();
//                }
//            }
//        }
    public boolean isValidDate(String date) {
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    dateFormat.setLenient(false);
    try {
        dateFormat.parse(date);
        return true;
    } catch (ParseException e) {
        return false;
    }
}
        DefaultTableModel model = new DefaultTableModel();
        public void addColumn(){
            model.addColumn("Task ID");
            model.addColumn("Task");
            model.addColumn("Categoty");
            model.addColumn("Date");
            taskTable.setModel(model);
        }
        public void displayTask(){
            model.setRowCount(0);
            List<Task> allTasks = daoObj.RetrieveAllTasks();
            if(allTasks != null){
                for (Task singleTask: allTasks){
                    model.addRow(new Object []{
                       singleTask.getId(),
                       singleTask.getTask(),
                       singleTask.getCategory(),
                       singleTask.getDate()
                    });
                }
            }

        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tasknameTxt = new javax.swing.JTextField();
        dateTxt = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        searchidtxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        WelcomeMsg = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        categoryTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        taskidtxt = new javax.swing.JTextField();
        refreshBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        LoggedInUser = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Task Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Category");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Date");

        tasknameTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        dateTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ", "Category", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(taskTable);

        searchidtxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        searchBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Enter ID: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(searchidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        WelcomeMsg.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        WelcomeMsg.setText("jLabel1");

        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        createBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        categoryTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Task Id");

        taskidtxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        refreshBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        viewBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        LoggedInUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LoggedInUser, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addGap(340, 340, 340)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(taskidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel5)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tasknameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(categoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addComponent(dateTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(createBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(deleteBtn)
                                .addGap(27, 27, 27)
                                .addComponent(viewBtn)
                                .addGap(27, 27, 27)
                                .addComponent(refreshBtn)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(WelcomeMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(281, 281, 281))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LoggedInUser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(WelcomeMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(taskidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(categoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(tasknameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBtn)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn)
                    .addComponent(refreshBtn)
                    .addComponent(viewBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Person newPerson = new Person();
        newPerson.setFirstname(newPerson.getFirstname());
        newPerson.setLastname(newPerson.getLastname());
        PersonHandlerdao daoObj = new PersonHandlerdao();
        Person Obj = daoObj.HandleSession(newPerson);
        if(Obj != null){
            LoggedInUser.setText(Obj.getFirstname());
            WelcomeMsg.setText("Welcome Back "+ Obj.getFirstname() + " " + Obj.getLastname() + "!" + " :)");
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
//         TODO add your handling code here:
//        Person newPerson = new Person();
//        newPerson.setFirstname(newPerson.getFirstname());
//        PersonHandlerdao daoObj = new PersonHandlerdao();
//        Person Obj = daoObj.HandleSession(newPerson);
//        if(Obj != null){
//            LoggedInUser.setText(Obj.getFirstname());
//        }
    }//GEN-LAST:event_formWindowActivated

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
          if(taskidtxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Task Id can't be empty", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else{
            taskid = Integer.parseInt(taskidtxt.getText());
            taskObj.setId(taskid);
            feedBack = daoObj.deleteTask(taskObj);
            JOptionPane.showMessageDialog(this, feedBack);
            tasknameTxt.setText("");
            categoryTxt.setText("");
            taskidtxt.setText("");
            dateTxt.setText("");
          }
    }//GEN-LAST:event_deleteBtnActionPerformed
            

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        if(tasknameTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Task field can't be empty", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if (categoryTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Category field need to be filled", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if(dateTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Date field needs to be filled", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if(taskidtxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Task Id can't be empty", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if(taskidtxt.getText().length() != 6){
            JOptionPane.showMessageDialog(this, "Id must be 6 characters", "Error: Id character length doesn't match", JOptionPane.WARNING_MESSAGE);
        }else if(isValidDate(dateTxt.getText()) != true){
            JOptionPane.showMessageDialog(this, "invalid date");
        }
        else{
           try{
                task = tasknameTxt.getText();
                category = categoryTxt.getText();
                taskid = Integer.parseInt(taskidtxt.getText());
                String date = dateTxt.getText();
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date parsedDate = dateFormat.parse(date);
                java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());
                taskObj.setId(taskid);
                taskObj.setTask(task);
                taskObj.setCategory(category);
                taskObj.setDate(sqlDate);
                feedBack = daoObj.createTask(taskObj);
                JOptionPane.showMessageDialog(this, feedBack);
                tasknameTxt.setText("");
                categoryTxt.setText("");
                taskidtxt.setText("");
                dateTxt.setText("");
            }catch(Exception ex){
                ex.printStackTrace();
            }
         
        }
    }//GEN-LAST:event_createBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
         if(tasknameTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Task field can't be empty", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if (categoryTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Category field need to be filled", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if(dateTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Date field needs to be filled", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else if(taskidtxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Task Id can't be empty", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
            task = tasknameTxt.getText();
            category = categoryTxt.getText();
            taskid = Integer.parseInt(taskidtxt.getText());
            String date = dateTxt.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date parsedDate = dateFormat.parse(date);
            java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());
            taskObj.setId(taskid);
            taskObj.setTask(task);
            taskObj.setCategory(category);  
            taskObj.setDate(sqlDate);
            feedBack = daoObj.updateTask(taskObj);
            JOptionPane.showMessageDialog(this, feedBack);
             tasknameTxt.setText("");
             categoryTxt.setText("");
             taskidtxt.setText("");
             dateTxt.setText("");
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if(searchidtxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Search Id can't be empty", "Error: Mandatory field", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
            taskObj.setId(Integer.parseInt(searchidtxt.getText()));
            Task newTaskObj = daoObj.searchTask(taskObj);
            if(newTaskObj != null){
            taskidtxt.setText(Integer.toString(newTaskObj.getId()));
            tasknameTxt.setText(newTaskObj.getTask());
            categoryTxt.setText(newTaskObj.getCategory());
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
            String dateString = dateFormat.format(newTaskObj.getDate());
            dateTxt.setText(dateString);
            searchidtxt.setText("");
            }
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        // Was trying to do it the hard way before :))! Better look what others have done before stucking at a feature for days...
        //will need to work on the refresh Button.
//        DefaultTableModel model = (DefaultTableModel)taskTable.getModel();
//        displayAllTasks();
          displayTask();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel)taskTable.getModel();
//        if(model.getRowCount() > 0){
//          return;
//        }else{
//          displayAllTasks();
//        }
    }//GEN-LAST:event_viewBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LoggedInUser;
    private javax.swing.JLabel WelcomeMsg;
    private javax.swing.JTextField categoryTxt;
    private javax.swing.JButton createBtn;
    private javax.swing.JTextField dateTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchidtxt;
    private javax.swing.JTable taskTable;
    private javax.swing.JTextField taskidtxt;
    private javax.swing.JTextField tasknameTxt;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
